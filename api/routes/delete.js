const router = require('express').Router()
const controller = require('../controllers')
const { authenticate } = require("../utils/helper")

router.delete("/:Controller/:Id", authenticate, (req, res) => {
    let myController = req.params.Controller;
    switch (myController) {
        case "admin_module": controller.AdminModule.delete(req, res); break;
        case "admin_menu_type": controller.Admin_Menu_Type.delete(req, res); break;
        case "admin_company": controller.Admin_Company.delete(req, res); break;
        case "admin_menu_user_right": controller.Admin_Menu_User_Rights.delete(req, res); break;
        case "company_access": controller.Style.deleteCompanyAccess(req, res); break;
        case "fit_category": controller.FitCategory.delete(req, res); break;
        case "fabric": controller.Fabric.delete(req, res); break;
        case "gender": controller.Gender.delete(req, res); break;
        case "gender_category": controller.GenderCategory.delete(req, res); break;
               
        // case "getInseam": controller.Items.delete(req,res); break;
        case "getSize": controller.Items.delete(req, res); break;
        case "getDetail": controller.Items.delete(req, res); break;
        case "item": controller.Items.delete(req, res); break;
        case "item_type": controller.Item_Type.delete(req, res); break;
        case "rise": controller.Rise.delete(req, res); break;
        case "rise_label": controller.RiseLabel.delete(req, res); break;
        case "style": controller.Style.delete(req, res); break;
        case "season": controller.Season.delete(req, res); break;
        case "product_status": controller.Product_Status.delete(req, res); break;
        case "product_class": controller.Product_Class.delete(req, res); break;
        case "user": controller.Users.delete(req, res); break;
        case "wash": controller.Wash.delete(req, res); break;
        case "wash_type": controller.WashType.delete(req, res); break;
        case "customer": controller.Customer.delete(req, res); break;
        case "customerBill": controller.CustomerBill.delete(req, res); break;
        case "customerShip": controller.CustomerShip.delete(req, res); break;
        case "customerType": controller.CustomerType.delete(req, res); break;
        case "vendorBill": controller.VendorBill.delete(req, res); break;
        case "vendorShip": controller.VendorShip.delete(req, res); break;
        case "orderStatus": controller.OrderStatus.delete(req, res); break;
        case "cut": controller.Cut.delete(req, res); break;
        case "customerSale": controller.CustomerSales.delete(req, res); break;
        case "inseamLabel": controller.InseamLabel.delete(req, res); break;
        case "regionCategory": controller.RegionCategory.delete(req, res); break;
        case "salesPerson": controller.SalesPerson.delete(req, res); break;
        case "adminCountry": controller.AdminCountry.delete(req, res); break;
        case "inseam": controller.Inseam.delete(req, res); break;
        case "size": controller.Size.delete(req, res); break;
        case "adminCity": controller.AdminCity.delete(req, res); break;
        case "adminState": controller.AdminState.delete(req, res); break;
        case "adminRegion": controller.AdminRegion.delete(req, res); break;
        case "saleOrderHeader": controller.SaleOrderHeader.delete(req, res); break;
        case "adminCourierService": controller.AdminCourierService.delete(req, res); break;
        case "adminFreightTerm": controller.AdminFreightTerm.delete(req, res); break;
        case "adminShippingMethod": controller.AdminShippingMethod.delete(req, res); break;
        case "adminLocation": controller.AdminLocation.delete(req, res); break;
        case "adminBerganBilling": controller.AdminBerganBilling.delete(req, res); break;
        case "saleOrderLine": controller.SaleOrderLine.delete(req, res); break;
        case "styleCombination": controller.StyleCombination.delete(req, res); break;
        case "adminShipVia": controller.AdminShipVia.delete(req, res); break;
        case "customerTerm": controller.CustomerTerm.delete(req, res); break;
        case "adminShipTaxCode": controller.AdminShipTaxCode.delete(req, res); break;
        case "adminMenu": controller.AdminMenu.delete(req, res); break;
        case "account": controller.Account.delete(req, res); break;
        case "adminTax": controller.AdminTax.delete(req, res); break;
        case "orderShipHeader": controller.OrderShipHeader.delete(req, res); break;
        case "orderShipLines": controller.OrderShipLines.delete(req, res); break;
        case "adminUserCompany": controller.AdminUserCompany.delete(req, res); break;
        case "accountType": controller.AccountType.delete(req, res); break;
        case "invoiceHeader": controller.InvoiceHeader.delete(req, res); break;
        case "invoiceLine": controller.InvoiceLine.delete(req, res); break;
        case "creditLine": controller.CreditLine.delete(req, res); break;
        case "ptStatus": controller.PTStatus.delete(req, res); break;
        case "shipStatus": controller.ShipStatus.delete(req, res); break;
        case "saleReturnHeader": controller.SaleReturnHeader.delete(req, res); break;
        case "fiscalYear": controller.FiscalYear.delete(req, res); break;
        case "fiscalYearPeriod": controller.FiscalYearPeriod.delete(req, res); break;
        case "saleReturnLine": controller.SaleReturnLine.delete(req, res); break;
        case "adminReturnReason": controller.AdminReturnReason.delete(req, res); break;
        case "scmBrand": controller.SCMBrand.delete(req, res); break;
        case "scmFigure": controller.SCMFigure.delete(req, res); break;
        case "scmSaleTarget": controller.SCMSaleTarget.delete(req, res); break;
        case "scmTargetMonth": controller.SCMTargetMonth.delete(req, res); break;
        case "scmTargetYear": controller.SCMTargetYear.delete(req, res); break;
        case "receiptHeader": controller.ReceiptHeader.delete(req, res); break;
        case "scmVendor": controller.SCMVendor.delete(req, res); break;
        case "creditHeader": controller.CreditHeader.delete(req, res); break;
        case "scmVendorCategory": controller.SCMVendorCategory.delete(req, res); break;
        case "payPurchaseBillHeader": controller.PayPurchaseBillHeader.delete(req, res); break;
        case "payPurchaseBillItem": controller.PayPurchaseBillItem.delete(req, res); break;
        case "payPurchaseBillItemExpense": controller.PayPurchaseBillExpense.delete(req, res); break;
        case "iNVItemTransferHeader": controller.INVItemTransferHeader.delete(req, res); break;
        case "iNVItemTransferLine": controller.INVItemTransferLine.delete(req, res); break;
        case "adminReturnType": controller.AdminReturnType.delete(req, res); break;
        case "fabricComposition": controller.FabricComposition.delete(req, res); break;
        case "productType": controller.ProductType.delete(req, res); break;
        case "fabricClass": controller.FabricClass.delete(req, res); break;
        case "fabricClass2": controller.FabricClass2.delete(req, res); break;
        case "fabricType": controller.FabricType.delete(req, res); break;
        case "fabricUsable": controller.FabricUsable.delete(req, res); break;
        case "commitCriteria": controller.CommitCriteria.delete(req, res); break;
        case "cashBack": controller.CashBack.delete(req, res); break;
        case "payCustomerPaymentHeader":controller.PayCustomerPaymentHeader.delete(req,res);break;//javed
        case "glvoucherheader":controller.VoucherHeader.delete(req,res);break;//javed
        case "payCustomerPaymentInvoice":controller.PayCustomerPaymentInvoice.delete(req,res);break;
        case "payCustomerPaymentNote":controller.PayCustomerPaymentNote.delete(req,res);break;
        case "glvoucherline":controller.voucherLine.delete(req,res);break;
        case "payBillPaymentHeader":controller.PayBillPaymentHeader.delete(req,res);break;
        case "payBillDirectPaymentHeader":controller.PayBillDirectPaymentHeader.delete(req,res);break;
        case "payBillPaymentLine":controller.PayBillPaymentLine.delete(req,res);break;
        case "payBillDirectPaymentExpense":controller.PayBillDirectPaymentExpense.delete(req,res);break;
        case "payBillDirectPaymentItem":controller.PayBillDirectPaymentItem.delete(req,res);break;
        case "paymentType": controller.PaymentType.delete(req, res); break;
        case "AdminPaymentMethod": controller.AdminPaymentMethod.delete(req,res); break;
        case "InvStockAdjustmentHeader": controller.InvStockAdjustmentHeader.delete(req, res); break;
        case "InvStockAdjustmentLines": controller.InvStockAdjustmentLines.delete(req, res); break;
        case "AdminPaymentMethodType": controller.Adminpaymentmethodtype.delete(req, res); break;
        case "FundTransfer": controller.FundTransferHeader.delete(req, res); break;
        case "PayBankDepositHeader": controller.payBankDepositHeader.delete(req, res); break;
        case "PayBankDepositLines": controller.PayBankDepositLines.delete(req, res); break;
        case "TermForprint": controller.TermForPrint.delete(req, res); break;
        case "CreditNoteInvoive" : controller.CreditNoteInvoive.delete(req, res); break;
        case "SysReportParameter" : controller.SysReportParameter.delete(req,res); break;
        case "adminCurrency": controller.AdminCurrency.delete(req, res); break;
        case "adminFactor": controller.AdminFactor.delete(req, res); break;
        case "adminJob": controller.AdminJob.delete(req, res); break;
        case "AdminBarganPaymentTerm": controller.AdminBarganPaymentterm.delete(req, res); break;
        case "adminDiscount": controller.AdminDiscount.delete(req, res); break;
        case "customerRefundHeader" : controller.customerRefundHeader.delete(req, res); break;
        case "CustomerRefundLine": controller.CustomerRefundLine.delete(req, res); break;
        case "PayBillDirectPaymentExpense": controller.PayBillDirectPaymentExpense.delete(req, res); break;
        case "deleteThroughHeader": controller.SaleOrderLine.deleteThroughHeader(req, res); break;
    }
})
module.exports = router;
